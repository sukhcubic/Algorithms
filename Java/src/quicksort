
public class QuickSort {
// Explanation if quick sort https://www.youtube.com/watch?v=ZHVk2blR45Q
	private static void sort(int[] a, int lo, int hi){
		if(lo >= hi) {
			return;
		}
		int part = partition(a, lo, hi);
		sort(a, lo, part-1);
	        sort(a, part , hi);	
	}

	private static void swap(int[] a, int i, int j){
		int swap = a[i]; 
		a[i] = a[j];
		a[j] = swap; 
	  }
	
	private static int partition(int[] a, int low, int high) {
	//	int index = getPivotIndex(low, high);
	//	int pivot = a[index];
	//	
	//	while(low <= high) {
	//		while(a[low] < pivot) {
	//			low ++;
	//		}
	//		
	//		while(a[high] > pivot) {
	//			high --;
	//		}
	//		
	//		if(low <= high) {
	//		 swap(a, low, high);
	//		 low++;
	//		 high--;
	//		}
	//	}
	//	return low;
		
	// .    Second version
	        int pivot = a[high];
		for(int i = low; i < high; i++) {
			if(a[i] < pivot) {
				swap(a, low, i);
				low++;
			}
		}
		swap(a, low, high);
		return low;
	}
	
	private static int getPivotIndex(int low, int high) {
//		Random rand = new Random();
//		return rand.nextInt((high-low)+1) +low;
		return (low + high)/2;
	}
	
	public static void main(String[] args) {
		int[] a = new int[] {1000, 4, 2, 1, 7, 5, 3, 55, 67, 7, 10, 9, 4, 78, 95, 15, 3, 56, 86, 99, 20 };
		sort(a, 0, a.length-1);
		for (int i : a) {
			System.out.println(i);
		}
	}
}
